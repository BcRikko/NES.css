@mixin btn-style($color, $background, $hover-background, $shadow) {
  color: $color;
  background-color: $background;

  &::after {
    position: absolute;
    top: -$border-size;
    right: -$border-size;
    bottom: -$border-size;
    left: -$border-size;
    content: "";
    box-shadow: inset -4px -4px $shadow;
  }

  &:hover,
  &:focus {
    background-color: $hover-background;

    &::after {
      box-shadow: inset -6px -6px $shadow;
    }
  }

  &:active:not(.is-disabled)::after {
    box-shadow: inset 4px 4px $shadow;
  }
}

// Default style
.nes-btn {
  @include compact-rounded-corners();

  position: relative;
  display: inline-block;
  padding: 6px 8px;
  margin: $border-size;
  text-align: center;
  vertical-align: middle;
  cursor: $cursor-click-url, pointer;
  user-select: none;

  @include btn-style(
    $base-color,
    map-get($default-colors, "normal"),
    map-get($default-colors, "hover"),
    map-get($default-colors, "shadow")
  );

  &:focus {
    outline: 0;
  }

  &.is-disabled,
  &.is-disabled:hover,
  &.is-disabled:focus {
    color: $base-color;
    cursor: not-allowed;
    background-color: map-get($disabled-colors, "normal");
    box-shadow: inset -4px -4px map-get($disabled-colors, "shadow");
    opacity: $btn-disabled-opacity;
  }

  // Other styles
  // prettier-ignore
  $types:
    "primary" $background-color map-get($primary-colors, "normal") map-get($primary-colors, "hover") map-get($primary-colors, "shadow"),
    "success" $background-color map-get($success-colors, "normal") map-get($success-colors, "hover") map-get($success-colors, "shadow"),
    "warning" $base-color map-get($warning-colors, "normal") map-get($warning-colors, "hover") map-get($warning-colors, "shadow"),
    "error" $background-color map-get($error-colors, "normal") map-get($error-colors, "hover") map-get($error-colors, "shadow");

  @each $type in $types {
    &.is-#{nth($type, 1)} {
      @include btn-style(nth($type, 2), nth($type, 3), nth($type, 4), nth($type, 5));
    }
  }
}

// Button groups
.nes-btn-group {
  .nes-btn:first-child {
    z-index: 1;
  }

  .nes-btn{
    &.is-disabled {
      color: rgba($base-color, $btn-disabled-opacity);
      background-color: rgba(map-get($disabled-colors, "normal"), $btn-disabled-opacity);
      box-shadow: none;
      opacity: 1;
    }

    &:not(:last-child):not(:first-child)::after {
      box-shadow: inset -8px -4px map-get($default-colors, "shadow");
    }
  }

  @for $i from 0 to $max-btn-group-items {
    .nes-btn:nth-child(#{$i + 1}) {
      left: -($i * 24px);

      // prettier-ignore
      $types:
      "primary" map-get($primary-colors, "shadow"),
      "success" map-get($success-colors, "shadow"),
      "warning" map-get($warning-colors, "shadow"),
      "error" map-get($error-colors, "shadow");

      @each $type in $types {
        &.is-#{nth($type, 1)}:not(:last-child):not(:first-child)::after {
          box-shadow: inset -8px -4px nth($type, 2);
        }
      }
    }
  }
  
}
